{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/about/about.component.ts","webpack:///src/app/about/about.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/first-and-last-messages-editor/first-and-last-messages-editor.component.ts","webpack:///src/app/first-and-last-messages-editor/first-and-last-messages-editor.component.html","webpack:///src/app/mainpage/mainpage.component.ts","webpack:///src/app/mainpage/mainpage.component.html","webpack:///src/app/message-form/message-form.component.ts","webpack:///src/app/message-form/message-form.component.html","webpack:///src/app/modal-add-question/modal-add-question.component.ts","webpack:///src/app/modal-add-question/modal-add-question.component.html","webpack:///src/app/model/option/option.ts","webpack:///src/app/model/score-range-result.ts","webpack:///src/app/navigation/navigation.component.ts","webpack:///src/app/navigation/navigation.component.html","webpack:///src/app/not-found/not-found.component.ts","webpack:///src/app/not-found/not-found.component.html","webpack:///src/app/question/question.component.ts","webpack:///src/app/question/question.component.html","webpack:///src/app/questions/questions.component.ts","webpack:///src/app/questions/questions.component.html","webpack:///src/app/score-range-message/score-range-message.component.ts","webpack:///src/app/score-range-message/score-range-message.component.html","webpack:///src/app/service/bot.service.ts","webpack:///src/app/service/image-file.service.ts","webpack:///src/app/service/main.service.ts","webpack:///src/app/service/question-service.service.ts","webpack:///src/app/service/score-range-result.service.ts","webpack:///src/app/service/user-service.service.ts","webpack:///src/app/users/users.component.ts","webpack:///src/app/users/users.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AboutComponent","selector","templateUrl","styleUrls","routes","AppRoutingModule","forRoot","imports","AppComponent","title","appRoutes","path","component","pathMatch","AppModule","declarations","providers","bootstrap","FirstAndLastMessagesEditorComponent","MainpageComponent","botService","bot","active","isBotActive","subscribe","result","setBotTurn","location","reload","onClickTurnBtn","MessageFormComponent","mainService","messageToUsers","text","maxScore","minScore","sendMessageToUsers","window","href","error","alert","ModalAddQuestionComponent","modalService","modal","questionService","question","content","options","answer","weight","modalForm","editQuestion","isQuestionChanged","i","option","indexOfTrueOption","sendQuestion","close","opt","push","addOptionToQuestion","Option","ScoreRangeResult","NavigationComponent","NotFoundComponent","QuestionComponent","httpClient","model","url","post","res","sendQuestionWithOptions","QuestionsComponent","imageFileService","getAllQuestions","questions","open","deleteQuestion","q","componentInstance","questionId","uploadImage","selectedFile","event","target","files","openCreationNewQuestionForm","ScoreRangeMessageComponent","scoreRangeResultService","scoreRanges","getAllScoreRangeResults","scoreRangeResult","uploadImageForScoreRange","imageFile","addNewScoreRange","BotService","get","providedIn","ImageFileService","file","formData","FormData","append","MainService","QuestionServiceService","host","ScoreRangeResultService","max","toString","UserServiceService","UsersComponent","userService","getAllUsers","users","checkIsUserActiveNow","forEach","value","activeNow","color","presentGiven","givePresentToUser","environment","production","bootstrapModule","catch","err","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col\">\n      Здесь будут размещены иструкции, как пользоватсья ботом\n    </div>\n    <div class=\"col\">\n      2\n    </div>\n    <div class=\"col\">\n      3\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  title = 'nc bot';\n}\n","<div class=\"container\">\r\n  <app-navigation></app-navigation>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\n\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {AppComponent} from './app.component';\r\nimport {NavigationComponent} from './navigation/navigation.component';\r\nimport {RouterModule, Routes} from \"@angular/router\";\r\nimport {QuestionsComponent} from './questions/questions.component';\r\nimport {UsersComponent} from './users/users.component';\r\nimport {NotFoundComponent} from './not-found/not-found.component';\r\nimport {MainpageComponent} from './mainpage/mainpage.component';\r\nimport {FormsModule} from \"@angular/forms\";\r\nimport {HttpClientModule} from \"@angular/common/http\";\r\nimport { QuestionComponent } from './question/question.component';\r\nimport { ModalAddQuestionComponent } from './modal-add-question/modal-add-question.component';\r\nimport { MessageFormComponent } from './message-form/message-form.component';\r\nimport { AboutComponent } from './about/about.component';\r\nimport { FirstAndLastMessagesEditorComponent } from './first-and-last-messages-editor/first-and-last-messages-editor.component';\r\nimport { ScoreRangeMessageComponent } from './score-range-message/score-range-message.component';\r\n\r\nconst appRoutes: Routes = [\r\n  {\r\n    path: 'questions',\r\n    component: QuestionsComponent\r\n  },\r\n  {\r\n    path: 'users',\r\n    component: UsersComponent\r\n  },\r\n  {\r\n    path: '',\r\n    component: MainpageComponent,\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'questions/add',\r\n    component: QuestionComponent\r\n  },\r\n  {\r\n    path: 'global/message',\r\n    component: MessageFormComponent\r\n  },\r\n  {\r\n    path: 'range/message',\r\n    component: ScoreRangeMessageComponent\r\n  },\r\n  {\r\n    path: '**',\r\n    component: NotFoundComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavigationComponent,\r\n    QuestionsComponent,\r\n    UsersComponent,\r\n    NotFoundComponent,\r\n    MainpageComponent,\r\n    QuestionComponent,\r\n    ModalAddQuestionComponent,\r\n    MessageFormComponent,\r\n    AboutComponent,\r\n    FirstAndLastMessagesEditorComponent,\r\n    ScoreRangeMessageComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    RouterModule.forRoot(appRoutes)\r\n  ],\r\n  exports: [RouterModule],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-first-and-last-messages-editor',\n  templateUrl: './first-and-last-messages-editor.component.html',\n  styleUrls: ['./first-and-last-messages-editor.component.css']\n})\nexport class FirstAndLastMessagesEditorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>first-and-last-messages-editor works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport {BotService} from \"../service/bot.service\";\nimport {Bot} from \"../model/bot/bot\";\n\n@Component({\n  selector: 'app-mainpage',\n  templateUrl: './mainpage.component.html',\n  styleUrls: ['./mainpage.component.css']\n})\nexport class MainpageComponent implements OnInit {\n  bot:Bot = {\n    active:true\n  };\n  constructor(private botService:BotService) { }\n\n  ngOnInit(): void {\n    this.botService.isBotActive().subscribe((result:Bot) =>{\n      this.bot = result;\n    })\n  }\n\n  onClickTurnBtn(){\n    this.botService.setBotTurn(this.bot).subscribe((result:Bot) =>{\n      this.bot = result;\n      location.reload();\n    });\n  }\n\n  checkBotActivity():string{\n    if (this.bot.active == true) {\n      return \"on\";\n    }\n    return \"off\";\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col\">\n      <img src=\"./src/qr_link_to_telegram_bot.png\"/>\n      find me: @nctelegrambot\n    </div>\n    <div class=\"col\">\n      welcome to nc telegram bot configurer\n    </div>\n    <div class=\"col\">\n      for configuration, please sign in or sign up as nc edu center user\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col container-fluid\" style=\"text-align: center\">\n      <button class=\"btn btn-primary\" (click)=\"onClickTurnBtn()\">{{checkBotActivity()}}</button>\n    </div>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\r\nimport {MessageToUsers} from \"../model/message-to-users\";\r\nimport {MainService} from \"../service/main.service\";\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-message-form',\r\n  templateUrl: './message-form.component.html',\r\n  styleUrls: ['./message-form.component.css']\r\n})\r\nexport class MessageFormComponent implements OnInit {\r\n  messageToUsers: MessageToUsers = {\r\n    text: '',\r\n    maxScore:0,\r\n    minScore:0\r\n  };\r\n\r\n  constructor(private mainService: MainService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  sendMessageToUsers() {\r\n    this.mainService.sendMessageToUsers(this.messageToUsers).subscribe(result => {\r\n        window.location.href = \"/\";\r\n      },\r\n      error => {\r\n        alert(\"Error during sending the message\");\r\n      })\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col\">\n        <label for=\"message__form\">input message for users</label>\n        <textarea id=\"message__form\" [(ngModel)]=\"messageToUsers.text\"></textarea>\n    </div>\n    <div class=\"col\">\n      score range for message\n      from: <input type=\"text\" [(ngModel)]=\"messageToUsers.minScore\"/>\n      to: <input type=\"text\" [(ngModel)]=\"messageToUsers.maxScore\"/>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col\">\n      <button class=\"btn-primary\" (click)=\"sendMessageToUsers()\">send message</button>\n    </div>\n  </div>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {NgbModal, NgbActiveModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {Question} from \"../model/question/question\";\nimport {Option} from \"../model/option/option\";\nimport {QuestionServiceService} from \"../service/question-service.service\";\nimport {ImageFile} from \"../model/image-file\";\n\n\n@Component({\n  selector: 'app-modal-add-question',\n  templateUrl: './modal-add-question.component.html',\n  styleUrls: ['./modal-add-question.component.css']\n})\nexport class ModalAddQuestionComponent implements OnInit {\n  @Input() editQuestion:Question;\n  modalForm: NgbActiveModal;\n  indexOfTrueOption:number;\n  isQuestionChanged:boolean;\n  question: Question = {\n    id:0,\n    content: '',\n    options: [],\n    answer: '',\n    weight:0\n  };\n\n\n  constructor(private modalService: NgbModal, private modal: NgbActiveModal, private questionService: QuestionServiceService) {\n    this.modalForm = modal;\n  }\n\n\n  ngOnInit(): void {\n    if (this.editQuestion != null) {\n      this.isQuestionChanged = true;\n      this.question = this.editQuestion;\n    }\n    else  {\n      this.isQuestionChanged = false;\n    }\n  }\n\n  saveQuestion() {\n    let i:number = 0;\n    for (let option of this.question.options){\n      if (i == this.indexOfTrueOption) {\n        this.question.answer = option.content;\n      }\n      i++;\n    }\n    this.questionService.sendQuestion(this.question, this.isQuestionChanged).subscribe(result => {\n        location.reload();\n      },\n      error => {\n        alert(\"Error\")\n      });\n    this.modalForm.close(\"Efrfrf\");\n  }\n\n  addOptionToQuestion() {\n    let opt: Option = new Option();\n    this.question.options.push(opt);\n  }\n\n  removeOptionToQuestion() {\n\n  }\n}\n","<div class=\"modal-lg\">\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\">add new question</h4>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modalForm.dismiss('Cross click')\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col\">\n          <label for=\"question__input\">\n            question\n          </label>\n        </div>\n        <div class=\"col\">\n      <textarea [(ngModel)]=\"question.content\" id=\"question__input\">\n      </textarea>\n        </div>\n        <div class=\"col\">\n          <label for=\"weight__selector\">weight</label>\n          <select [(ngModel)]=\"question.weight\" id=\"weight__selector\">\n            <option>1</option>\n            <option>2</option>\n            <option>3</option>\n            <option>4</option>\n            <option>5</option>\n          </select>\n        </div>\n      </div>\n      <div class=\"row\" *ngFor=\"let option of this.question.options; let i = index\">\n        <div class=\"col\">\n          <label>\n            option\n          </label>\n        </div>\n        <div class=\"col\">\n          <input [(ngModel)]=\"option.content\" type=\"text\"/>\n        </div>\n\n        <div class=\"col\">\n          <label>\n            is true\n          </label>\n          <input type=\"radio\" name=\"is_true\" value=\"{{i}}\" [(ngModel)]=\"indexOfTrueOption\"/>\n        </div>\n        <div class=\"col\">\n          <label>\n            reaction\n          </label>\n          <input type=\"text\" name=\"reaction\" [(ngModel)]=\"option.reaction\"/>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"submit\" style=\"margin: 0 20px auto\" class=\"btn btn-primary\" (click)=\"addOptionToQuestion()\">add\n      option\n    </button>\n    <button type=\"submit\" class=\"btn btn-primary\" style=\"margin: 0 20px auto\" (click)=\"saveQuestion()\" *ngIf=\"isQuestionChanged\">\n      edit question\n    </button>\n    <button type=\"submit\" class=\"btn btn-primary\" style=\"margin: 0 20px auto\" (click)=\"saveQuestion()\" *ngIf=\"!isQuestionChanged\">\n      save question\n    </button>\n  </div>\n</div>\n","export class Option {\n  id:number;\n  content:string;\n  reaction:string;\n}\n","export class ScoreRangeResult {\n  id:number;\n  max:number;\n  text:string;\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent implements OnInit {\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <a class=\"navbar-brand\" href=\"#\">NC TELEGRAM BOT</a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n    <div class=\"navbar-nav\">\n      <a class=\"nav-item nav-link active\" href=\"/\">home<span class=\"sr-only\">(current)</span></a>\n      <a class=\"nav-item nav-link\" href=\"/questions\">qustions</a>\n      <a class=\"nav-item nav-link\" href=\"/users\">users</a>\n      <a class=\"nav-item nav-link\" href=\"/global/message\">send message</a>\n      <a class=\"nav-item nav-link\" href=\"/range/message\">score ranged messages</a>\n      <a class=\"nav-item nav-link disabled\" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\">sign in/up</a>\n    </div>\n  </div>\n</nav>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>not-found works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n  selector: 'app-question',\n  templateUrl: './question.component.html',\n  styleUrls: ['./question.component.css']\n})\nexport class QuestionComponent implements OnInit {\n  model:AddingQuestionWithOptionsForm = {\n    question:'',\n    options:[]\n  };\n  constructor(private httpClient: HttpClient) { }\n\n  ngOnInit(): void {\n  }\n\n  sendQuestionWithOptions(): void{\n    let url=\"http://localhost:8080/questions/add\";\n    this.httpClient.post(url, this.model).subscribe(res =>\n      {\n        location.reload();\n      },\n      error => {\n        alert(\"Error\");\n      }\n    )\n  }\n\n}\n\nexport interface AddingQuestionWithOptionsForm {\n  question:string;\n  options:Option[];\n}\n\nexport interface Option {\n  content:string;\n}\n","<form (submit)=\"sendQuestionWithOptions()\">\n  <div class=\"form-group row\">\n    <label for=\"question__content\" class=\"col-sm-2 col-form-label\">question</label>\n    <div class=\"col-sm-10\">\n      <input type=\"text\" class=\"form-control\" id=\"question__content\" [(ngModel)] = model.question placeholder=\"question\">\n    </div>\n  </div>\n  <div class=\"form-group row\">\n    <label for=\"option\" class=\"col-sm-2 col-form-label\">option</label>\n    <div class=\"col-sm-10\">\n      <input type=\"text\" class=\"form-control\" id=\"option\" placeholder=\"Password\">\n    </div>\n  </div>\n  <div class=\"form-group row\">\n    <div class=\"col-sm-10\">\n      <button type=\"submit\" class=\"btn btn-primary\">ok</button>\n    </div>\n  </div>\n</form>\n","import {Component, OnInit} from '@angular/core';\nimport {Question} from \"../model/question/question\";\nimport {QuestionServiceService} from \"../service/question-service.service\";\nimport {NgbModal} from '@ng-bootstrap/ng-bootstrap';\nimport {ModalAddQuestionComponent} from \"../modal-add-question/modal-add-question.component\";\nimport {ImageFileService} from \"../service/image-file.service\";\n\n@Component({\n  selector: 'app-questions',\n  templateUrl: './questions.component.html',\n  styleUrls: ['./questions.component.css']\n})\nexport class QuestionsComponent implements OnInit {\n  questions: Question[];\n  public selectedFile;\n\n  constructor(private imageFileService: ImageFileService, private questionService: QuestionServiceService, private modalService: NgbModal) {\n  }\n\n  ngOnInit(): void {\n    this.questionService.getAllQuestions().subscribe((result: Question[]) => {\n        this.questions = result;\n      }\n    );\n  }\n\n  openCreationNewQuestionForm() {\n    this.modalService.open(ModalAddQuestionComponent);\n  }\n\n  deleteQuestion(id) {\n    this.questionService.deleteQuestion(id).subscribe(result => {\n      location.reload();\n    }, error => {\n      alert(\"Error\");\n    });\n  }\n\n  editQuestion(q: Question) {\n    let modalForm = this.modalService.open(ModalAddQuestionComponent);\n    modalForm.componentInstance.editQuestion = q;\n  }\n\n  processFile(questionId: number) {\n    this.imageFileService.uploadImage(questionId, this.selectedFile).subscribe(result => {\n        alert(\"Success\");\n      },\n      error => {\n        alert(\"Something go wrong!..\")\n      });\n  }\n\n  onFileChanged(event) {\n    this.selectedFile = event.target.files[0];\n  }\n}\n","<div class=\"container-fluid\">\n  <button type=\"button\" (click)=\"openCreationNewQuestionForm()\" class=\"btn btn-primary btn-lg btn-block\"\n          style=\"margin: 20px 0 20px 0\">add new question\n  </button>\n  <table class=\"table table-bordered\">\n    <thead>\n    <tr>\n      <th>\n        №\n      </th>\n      <th>\n        attachment\n      </th>\n      <th>\n        content\n      </th>\n      <th>\n        options\n      </th>\n      <th>\n        answer\n      </th>\n      <th>\n        weight\n      </th>\n      <th>\n        actions\n      </th>\n    </tr>\n    </thead>\n    <tbody *ngFor=\"let question of questions; let i = index\">\n    <tr id=\"'tr__' + {{i}}\">\n      <td>\n        {{i + 1}}\n      </td>\n      <td>\n        <div *ngIf=\"question.attachment != null\">\n          {{question.attachment}}\n        </div>\n        <div *ngIf=\"question.attachment == null\">\n          <input (change)=\"onFileChanged($event)\" type=\"file\"/>\n          <button (click)=\"processFile(question.id)\">add</button>\n        </div>\n      </td>\n      <td>\n        {{question.content}}\n      </td>\n      <td>\n        <ul *ngFor=\"let option of question.options\">\n          <li>\n            {{option.content}}\n          </li>\n        </ul>\n      </td>\n      <td>\n        {{question.answer}}\n      </td>\n      <td>\n        {{question.weight}}\n      </td>\n      <td>\n        <div class=\"container\">\n          <div class=\"row\" style=\"text-align: center\">\n            <div class=\"col\">\n              <button class=\"btn btn-primary\" (click)=\"editQuestion(question)\">edit</button>\n            </div>\n            <div class=\"col\">\n              <button class=\"btn btn-danger\" (click)=\"deleteQuestion(question.id)\">delete</button>\n            </div>\n          </div>\n        </div>\n      </td>\n    </tr>\n    </tbody>\n  </table>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {ScoreRangeResult} from \"../model/score-range-result\";\nimport {ScoreRangeResultService} from \"../service/score-range-result.service\";\nimport {ImageFileService} from \"../service/image-file.service\";\n\n@Component({\n  selector: 'app-score-range-message',\n  templateUrl: './score-range-message.component.html',\n  styleUrls: ['./score-range-message.component.css']\n})\nexport class ScoreRangeMessageComponent implements OnInit {\n  scoreRanges:ScoreRangeResult[];\n  imageFile:File;\n  constructor(private scoreRangeResultService: ScoreRangeResultService) { }\n\n  ngOnInit(): void {\n    this.scoreRanges = [];\n    this.scoreRangeResultService.getAllScoreRangeResults().subscribe((result:ScoreRangeResult) => {\n      this.scoreRanges.push(result);\n    });\n  }\n\n  addNewScoreRange() {\n    let scoreRangeResult: ScoreRangeResult = new ScoreRangeResult();\n    this.scoreRanges.push(scoreRangeResult);\n  }\n\n  scoreRangeResultSend(scoreRangeResult: ScoreRangeResult) {\n    this.scoreRangeResultService.uploadImageForScoreRange(scoreRangeResult).subscribe(result =>{\n      alert(\"SUCCESS\");\n    },\n      error => {\n      alert(\"ERROR\");\n      })\n  }\n\n  changeImageFile(event) {\n    this.imageFile = event.target.files[0];\n  }\n}\n","<div class=\"container-fluid\">\n  <button class=\"btn-primary\" (click)=\"addNewScoreRange()\">new score range</button>\n  <div class=\"row\" *ngFor=\"let scoreRange of this.scoreRanges; let i = index\">\n    <div class=\"col\">\n      <div class=\"form-group\">\n        <label>max range</label>\n        <input [(ngModel)]=\"scoreRange.max\" type=\"number\"/>\n        <input [(ngModel)]=\"scoreRange.text\" type=\"text\"/>\n        <input (change)=\"changeImageFile($event)\" type=\"file\"/>\n      </div>\n    </div>\n    <button (click)=\"scoreRangeResultSend(scoreRange)\" class=\"btn-dark\">ok</button>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {Bot} from \"../model/bot/bot\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BotService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  isBotActive():Observable<any> {\n    return this.httpClient.get(\"/bot/get/turn\");\n  }\n\n  setBotTurn(bot:Bot):any {\n    let url:string = \"/bot/turn\";\n    return this.httpClient.post(url, bot);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {Observable} from \"rxjs\";\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageFileService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  uploadImage(questionId: number, file: File):Observable<any> {\n    alert(\"UPLOAD IMAGE!\");\n    const formData = new FormData();\n    formData.append(\"image\", file);\n    let url = \"questions/attachment/upload/\" + questionId;\n    return this.httpClient.post(url, formData);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {MessageToUsers} from \"../model/message-to-users\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MainService {\n\n  constructor(private httpClient:HttpClient) { }\n\n  sendMessageToUsers(messageToUsers:MessageToUsers):Observable<any> {\n    let url:string = \"send/global/message\";\n    return this.httpClient.post(url, messageToUsers);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Question} from \"../model/question/question\";\nimport {Observable} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuestionServiceService {\n  host = \"/questions/\";\n  question: Question;\n\n  constructor(private httpClient: HttpClient) {\n  }\n\n  getAllQuestions(): Observable<any> {\n    let url = this.host + \"all/text\";\n    return this.httpClient.get(url);\n  }\n\n  sendQuestion(question: Question, isQuestionChanged: boolean): any {\n    let url:string;\n    if (isQuestionChanged) {\n      url = this.host + \"edit\";\n    } else {\n      url = this.host + \"add\";\n    }\n    return this.httpClient.post(url, question);\n  }\n\n  deleteQuestion(id): Observable<any> {\n    let url = this.host + \"remove?id=\" + id;\n    return this.httpClient.get(url);\n  }\n\n  editQuestion(id): Observable<any> {\n    let url = this.host + \"edit?id=\" + id;\n    return this.httpClient.get(url);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {ScoreRangeResult} from \"../model/score-range-result\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ScoreRangeResultService {\n\n  constructor(private httpClient:HttpClient) { }\n\n  getAllScoreRangeResults() {\n    return this.httpClient.get(\"/score/ranges\");\n  }\n\n  uploadImageForScoreRange(scoreRangeResult: ScoreRangeResult) {\n    let url = \"score/ranges/\";\n    const formData = new FormData();\n    formData.append(\"max\", scoreRangeResult.max.toString());\n    formData.append(\"text\", scoreRangeResult.text);\n    return this.httpClient.post(url, formData);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {Observable} from \"rxjs\";\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserServiceService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  getAllUsers(): Observable<any> {\n    return this.httpClient.get(\"all/users\");\n  }\n\n  givePresentToUser(id): Observable<any> {\n    let url = \"user/\" + id + \"/present\";\n    return this.httpClient.get(url);\n  }\n\n  isPresenGivenToUser(id): any {\n    let url = \"user/\" + id + \"/present/check\";\n    return this.httpClient.get(url);\n  }\n}\n","import {Component, OnInit} from '@angular/core';\r\nimport {UserServiceService} from \"../service/user-service.service\";\r\nimport {User} from \"../model/user/user\";\r\n\r\n@Component({\r\n  selector: 'app-users',\r\n  templateUrl: './users.component.html',\r\n  styleUrls: ['./users.component.css']\r\n})\r\nexport class UsersComponent implements OnInit {\r\n  users: User[];\r\n\r\n  constructor(private userService: UserServiceService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.userService.getAllUsers().subscribe((result: User[]) => {\r\n        this.users = result;\r\n        this.checkIsUserActiveNow(this.users);\r\n      }\r\n    )\r\n  }\r\n\r\n  checkIsUserActiveNow(users): void {\r\n    users.forEach(function (value: User) {\r\n      if (value.activeNow) {\r\n        value.color = \"yellow\";\r\n      }\r\n      if (value.presentGiven) {\r\n        value.color = \"red\";\r\n      }\r\n    });\r\n  }\r\n\r\n  givePresentToUser(id): void {\r\n    this.userService.givePresentToUser(id).subscribe(result => {\r\n      location.reload();\r\n    })\r\n  }\r\n\r\n}\r\n","<table class=\"table table-bordered\">\r\n  <thead>\r\n  <tr>\r\n    <th>\r\n      №\r\n    </th>\r\n    <th>\r\n      telegram id\r\n    </th>\r\n    <th>\r\n      first name\r\n    </th>\r\n    <th>\r\n      last name\r\n    </th>\r\n    <th>\r\n      user name\r\n    </th>\r\n    <th>\r\n      score\r\n    </th>\r\n    <th>\r\n      is present given\r\n    </th>\r\n  </tr>\r\n  </thead>\r\n  <tbody *ngFor=\"let user of users; let i = index\">\r\n  <tr [ngStyle]=\"{'background-color':user.color}\">\r\n    <td>\r\n      {{i}}\r\n    </td>\r\n    <td>\r\n      {{user.telegramId}}\r\n    </td>\r\n    <td>\r\n      {{user.firstName}}\r\n    </td>\r\n    <td>\r\n      {{user.lastName}}\r\n    </td>\r\n    <td>\r\n      {{user.username}}\r\n    </td>\r\n    <td>\r\n      {{user.score}}\r\n    </td>\r\n    <td>\r\n      <button class=\"badge-info\" (click)=\"givePresentToUser(user.id)\" [disabled]=\"user.presentGiven\">give present</button>\r\n    </td>\r\n  </tr>\r\n  </tbody>\r\n</table>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}