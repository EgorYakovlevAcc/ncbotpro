{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/mainpage/mainpage.component.ts","./src/app/mainpage/mainpage.component.html","./src/app/modal-add-question/modal-add-question.component.ts","./src/app/modal-add-question/modal-add-question.component.html","./src/app/model/option/option.ts","./src/app/navigation/navigation.component.ts","./src/app/navigation/navigation.component.html","./src/app/not-found/not-found.component.ts","./src/app/not-found/not-found.component.html","./src/app/question/question.component.ts","./src/app/question/question.component.html","./src/app/questions/questions.component.ts","./src/app/questions/questions.component.html","./src/app/service/bot.service.ts","./src/app/service/question-service.service.ts","./src/app/service/user-service.service.ts","./src/app/users/users.component.ts","./src/app/users/users.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\n\r\nexport class AppComponent {\r\n  title = 'ncbot-ui';\r\n}\r\n","<div class=\"container\">\r\n  <app-navigation></app-navigation>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\n\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {AppComponent} from './app.component';\r\nimport {NavigationComponent} from './navigation/navigation.component';\r\nimport {RouterModule, Routes} from \"@angular/router\";\r\nimport {QuestionsComponent} from './questions/questions.component';\r\nimport {UsersComponent} from './users/users.component';\r\nimport {NotFoundComponent} from './not-found/not-found.component';\r\nimport {MainpageComponent} from './mainpage/mainpage.component';\r\nimport {FormsModule} from \"@angular/forms\";\r\nimport {HttpClientModule} from \"@angular/common/http\";\r\nimport { QuestionComponent } from './question/question.component';\r\nimport { ModalAddQuestionComponent } from './modal-add-question/modal-add-question.component';\r\n\r\nconst appRoutes: Routes = [\r\n  {\r\n    path: 'questions',\r\n    component: QuestionsComponent\r\n  },\r\n  {\r\n    path: 'users',\r\n    component: UsersComponent\r\n  },\r\n  {\r\n    path: '',\r\n    component: MainpageComponent,\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'questions/add',\r\n    component: QuestionComponent\r\n  },\r\n  {\r\n    path: '**',\r\n    component: NotFoundComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavigationComponent,\r\n    QuestionsComponent,\r\n    UsersComponent,\r\n    NotFoundComponent,\r\n    MainpageComponent,\r\n    QuestionComponent,\r\n    ModalAddQuestionComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    RouterModule.forRoot(appRoutes)\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {BotService} from \"../service/bot.service\";\r\nimport {Bot} from \"../model/bot/bot\";\r\n\r\n@Component({\r\n  selector: 'app-mainpage',\r\n  templateUrl: './mainpage.component.html',\r\n  styleUrls: ['./mainpage.component.css']\r\n})\r\nexport class MainpageComponent implements OnInit {\r\n  bot:Bot = {\r\n    active:true\r\n  };\r\n  constructor(private botService:BotService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.botService.isBotActive().subscribe((result:Bot) =>{\r\n      this.bot = result;\r\n    })\r\n  }\r\n\r\n  onClickTurnBtn(){\r\n    this.botService.setBotTurn(this.bot).subscribe((result:Bot) =>{\r\n      this.bot = result;\r\n      location.reload();\r\n    });\r\n  }\r\n\r\n  checkBotActivity():string{\r\n    if (this.bot.active == true) {\r\n      return \"on\";\r\n    }\r\n    return \"off\";\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col\">\r\n      <img src=\"./src/qr_link_to_telegram_bot.png\"/>\r\n      find me: @nctelegrambot\r\n    </div>\r\n    <div class=\"col\">\r\n      welcome to nc telegram bot configurer\r\n    </div>\r\n    <div class=\"col\">\r\n      for configuration, please sign in or sign up as nc edu center user\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col container-fluid\" style=\"text-align: center\">\r\n      <button class=\"btn btn-primary\" (click)=\"onClickTurnBtn()\">{{checkBotActivity()}}</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {NgbModal, NgbActiveModal} from \"@ng-bootstrap/ng-bootstrap\";\r\nimport {Question} from \"../model/question/question\";\r\nimport {Option} from \"../model/option/option\";\r\nimport {QuestionServiceService} from \"../service/question-service.service\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-modal-add-question',\r\n  templateUrl: './modal-add-question.component.html',\r\n  styleUrls: ['./modal-add-question.component.css']\r\n})\r\nexport class ModalAddQuestionComponent implements OnInit {\r\n  @Input() editQuestion:Question;\r\n  modalForm: NgbActiveModal;\r\n  indexOfTrueOption:number;\r\n  isQuestionChanged:boolean;\r\n  question: Question = {\r\n    id:0,\r\n    content: '',\r\n    options: [],\r\n    answer: '',\r\n    weight:0\r\n  };\r\n\r\n\r\n  constructor(private modalService: NgbModal, private modal: NgbActiveModal, private questionService: QuestionServiceService) {\r\n    this.modalForm = modal;\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    if (this.editQuestion != null) {\r\n      this.isQuestionChanged = true;\r\n      this.question = this.editQuestion;\r\n    }\r\n    else  {\r\n      this.isQuestionChanged = false;\r\n    }\r\n  }\r\n\r\n  saveQuestion() {\r\n    let i:number = 0;\r\n    for (let option of this.question.options){\r\n      if (i == this.indexOfTrueOption) {\r\n        this.question.answer = option.content;\r\n      }\r\n      i++;\r\n    }\r\n    this.questionService.sendQuestion(this.question, this.isQuestionChanged).subscribe(result => {\r\n        location.reload();\r\n      },\r\n      error => {\r\n        alert(\"Error\")\r\n      });\r\n    this.modalForm.close(\"Efrfrf\");\r\n  }\r\n\r\n  addOptionToQuestion() {\r\n    let opt: Option = new Option();\r\n    this.question.options.push(opt);\r\n  }\r\n\r\n  removeOptionToQuestion() {\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"modal-lg\">\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">add new question</h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modalForm.dismiss('Cross click')\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <label for=\"question__input\">\r\n            question\r\n          </label>\r\n        </div>\r\n        <div class=\"col\">\r\n      <textarea [(ngModel)]=\"question.content\" id=\"question__input\">\r\n      </textarea>\r\n        </div>\r\n        <div class=\"col\">\r\n          <label for=\"weight__selector\">weight</label>\r\n          <select [(ngModel)]=\"question.weight\" id=\"weight__selector\">\r\n            <option>1</option>\r\n            <option>2</option>\r\n            <option>3</option>\r\n            <option>4</option>\r\n            <option>5</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\" *ngFor=\"let option of this.question.options; let i = index\">\r\n        <div class=\"col\">\r\n          <label>\r\n            option\r\n          </label>\r\n        </div>\r\n        <div class=\"col\">\r\n          <input [(ngModel)]=\"option.content\" type=\"text\"/>\r\n        </div>\r\n\r\n        <div class=\"col\">\r\n          <label>\r\n            is true\r\n          </label>\r\n          <input type=\"radio\" name=\"is_true\" value=\"{{i}}\" [(ngModel)]=\"indexOfTrueOption\"/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"submit\" style=\"margin: 0 20px auto\" class=\"btn btn-primary\" (click)=\"addOptionToQuestion()\">add\r\n      option\r\n    </button>\r\n    <button type=\"submit\" class=\"btn btn-primary\" style=\"margin: 0 20px auto\" (click)=\"saveQuestion()\" *ngIf=\"isQuestionChanged\">\r\n      edit question\r\n    </button>\r\n    <button type=\"submit\" class=\"btn btn-primary\" style=\"margin: 0 20px auto\" (click)=\"saveQuestion()\" *ngIf=\"!isQuestionChanged\">\r\n      save question\r\n    </button>\r\n  </div>\r\n</div>\r\n","export class Option {\r\n  id:number;\r\n  content:string;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-navigation',\r\n  templateUrl: './navigation.component.html',\r\n  styleUrls: ['./navigation.component.css']\r\n})\r\nexport class NavigationComponent implements OnInit {\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n  <a class=\"navbar-brand\" href=\"#\">NC TELEGRAM BOT</a>\r\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n  <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n    <div class=\"navbar-nav\">\r\n      <a class=\"nav-item nav-link active\" href=\"/\">home<span class=\"sr-only\">(current)</span></a>\r\n      <a class=\"nav-item nav-link\" href=\"questions\">qustions</a>\r\n      <a class=\"nav-item nav-link\" href=\"/users\">users</a>\r\n      <a class=\"nav-item nav-link disabled\" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\">sign in/up</a>\r\n    </div>\r\n  </div>\r\n</nav>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  templateUrl: './not-found.component.html',\r\n  styleUrls: ['./not-found.component.css']\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>not-found works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\n\r\n@Component({\r\n  selector: 'app-question',\r\n  templateUrl: './question.component.html',\r\n  styleUrls: ['./question.component.css']\r\n})\r\nexport class QuestionComponent implements OnInit {\r\n  model:AddingQuestionWithOptionsForm = {\r\n    question:'',\r\n    options:[]\r\n  };\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  sendQuestionWithOptions(): void{\r\n    let url=\"http://localhost:8080/questions/add\";\r\n    this.httpClient.post(url, this.model).subscribe(res =>\r\n      {\r\n        location.reload();\r\n      },\r\n      error => {\r\n        alert(\"Error\");\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport interface AddingQuestionWithOptionsForm {\r\n  question:string;\r\n  options:Option[];\r\n}\r\n\r\nexport interface Option {\r\n  content:string;\r\n}\r\n","<form (submit)=\"sendQuestionWithOptions()\">\r\n  <div class=\"form-group row\">\r\n    <label for=\"question__content\" class=\"col-sm-2 col-form-label\">question</label>\r\n    <div class=\"col-sm-10\">\r\n      <input type=\"text\" class=\"form-control\" id=\"question__content\" [(ngModel)] = model.question placeholder=\"question\">\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group row\">\r\n    <label for=\"option\" class=\"col-sm-2 col-form-label\">option</label>\r\n    <div class=\"col-sm-10\">\r\n      <input type=\"text\" class=\"form-control\" id=\"option\" placeholder=\"Password\">\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group row\">\r\n    <div class=\"col-sm-10\">\r\n      <button type=\"submit\" class=\"btn btn-primary\">ok</button>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {Question} from \"../model/question/question\";\r\nimport {QuestionServiceService} from \"../service/question-service.service\";\r\nimport {NgbModal} from '@ng-bootstrap/ng-bootstrap';\r\nimport {ModalAddQuestionComponent} from \"../modal-add-question/modal-add-question.component\";\r\n\r\n@Component({\r\n  selector: 'app-questions',\r\n  templateUrl: './questions.component.html',\r\n  styleUrls: ['./questions.component.css']\r\n})\r\nexport class QuestionsComponent implements OnInit {\r\n  questions:Question[];\r\n  constructor(private questionService: QuestionServiceService, private modalService: NgbModal) { }\r\n\r\n  ngOnInit(): void {\r\n    this.questionService.getAllQuestions().subscribe((result:Question[]) =>\r\n      {\r\n        this.questions = result;\r\n      }\r\n    );\r\n  }\r\n\r\n  openCreationNewQuestionForm(){\r\n    this.modalService.open(ModalAddQuestionComponent);\r\n  }\r\n\r\n  deleteQuestion(id){\r\n    this.questionService.deleteQuestion(id).subscribe(result => {\r\n      location.reload();\r\n    }, error => {\r\n      alert(\"Error\");\r\n    });\r\n  }\r\n\r\n  editQuestion(q:Question){\r\n    let modalForm = this.modalService.open(ModalAddQuestionComponent);\r\n    modalForm.componentInstance.editQuestion = q;\r\n  }\r\n}\r\n","<div>\r\n  <button type=\"button\" (click)=\"openCreationNewQuestionForm()\" class=\"btn btn-primary btn-lg btn-block\"\r\n          style=\"margin: 20px 0 20px 0\">add new question\r\n  </button>\r\n  <table class=\"table table-bordered\">\r\n    <thead>\r\n    <tr>\r\n      <th>\r\n        №\r\n      </th>\r\n      <th>\r\n        content\r\n      </th>\r\n      <th>\r\n        options\r\n      </th>\r\n      <th>\r\n        answer\r\n      </th>\r\n      <th>\r\n        weight\r\n      </th>\r\n      <th>\r\n        actions\r\n      </th>\r\n    </tr>\r\n    </thead>\r\n    <tbody *ngFor=\"let question of questions; let i = index\">\r\n    <tr id=\"'tr__' + {{i}}\">\r\n      <td>\r\n        {{i}}\r\n      </td>\r\n      <td>\r\n        {{question.content}}\r\n      </td>\r\n      <td>\r\n        <ul *ngFor=\"let option of question.options\">\r\n          <li>\r\n            {{option.content}}\r\n          </li>\r\n        </ul>\r\n      </td>\r\n      <td>\r\n        {{question.answer}}\r\n      </td>\r\n      <td>\r\n        {{question.weight}}\r\n      </td>\r\n      <td>\r\n        <div class=\"container\">\r\n          <div class=\"row\" style=\"text-align: center\">\r\n            <div class=\"col\">\r\n              <button class=\"btn btn-primary\" (click)=\"editQuestion(question)\">edit</button>\r\n            </div>\r\n            <div class=\"col\">\r\n              <button class=\"btn btn-danger\" (click)=\"deleteQuestion(question.id)\">delete</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </td>\r\n    </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport {Bot} from \"../model/bot/bot\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BotService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  isBotActive():Observable<any> {\r\n    return this.httpClient.get(\"/bot/get/turn\");\r\n  }\r\n\r\n  setBotTurn(bot:Bot):any {\r\n    let url:string = \"/bot/turn\";\r\n    return this.httpClient.post(url, bot);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Question} from \"../model/question/question\";\r\nimport {Observable} from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class QuestionServiceService {\r\n  host = \"/questions/\";\r\n  question: Question;\r\n\r\n  constructor(private httpClient: HttpClient) {\r\n  }\r\n\r\n  getAllQuestions(): Observable<any> {\r\n    let url = this.host + \"all/text\";\r\n    return this.httpClient.get(url);\r\n  }\r\n\r\n  sendQuestion(question: Question, isQuestionChanged: boolean): any {\r\n    let url:string;\r\n    if (isQuestionChanged) {\r\n      url = this.host + \"edit\";\r\n    } else {\r\n      url = this.host + \"add\";\r\n    }\r\n    return this.httpClient.post(url, question);\r\n  }\r\n\r\n  deleteQuestion(id): Observable<any> {\r\n    let url = this.host + \"remove?id=\" + id;\r\n    return this.httpClient.get(url);\r\n  }\r\n\r\n  editQuestion(id): Observable<any> {\r\n    let url = this.host + \"edit?id=\" + id;\r\n    return this.httpClient.get(url);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {Observable} from \"rxjs\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserServiceService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  getAllUsers(): Observable<any> {\r\n    return this.httpClient.get(\"all/users\");\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {UserServiceService} from \"../service/user-service.service\";\r\nimport {User} from \"../model/user/user\";\r\n\r\n@Component({\r\n  selector: 'app-users',\r\n  templateUrl: './users.component.html',\r\n  styleUrls: ['./users.component.css']\r\n})\r\nexport class UsersComponent implements OnInit {\r\n  users:User[];\r\n  constructor(private userService: UserServiceService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userService.getAllUsers().subscribe((result:User[]) =>\r\n      {\r\n        this.users = result;\r\n        this.checkIsUserActiveNow(this.users);\r\n      }\r\n    )\r\n  }\r\n\r\n  checkIsUserActiveNow(users):void {\r\n   users.forEach(function (value:User) {\r\n      if (value.activeNow){\r\n        value.color = \"yellow\";\r\n      }\r\n      else {\r\n        value.color=\"white\";\r\n      }\r\n   })\r\n  }\r\n\r\n}\r\n","<table class=\"table table-bordered\">\r\n  <thead>\r\n  <tr>\r\n    <th>\r\n      №\r\n    </th>\r\n    <th>\r\n      telegram id\r\n    </th>\r\n    <th>\r\n      first name\r\n    </th>\r\n    <th>\r\n      last name\r\n    </th>\r\n    <th>\r\n      score\r\n    </th>\r\n  </tr>\r\n  </thead>\r\n  <tbody *ngFor=\"let user of users; let i = index\">\r\n  <tr [ngStyle]=\"{'background-color':user.color}\">\r\n    <td>\r\n      {{i}}\r\n    </td>\r\n    <td>\r\n      {{user.telegramId}}\r\n    </td>\r\n    <td>\r\n      {{user.firstName}}\r\n    </td>\r\n    <td>\r\n      {{user.lastName}}\r\n    </td>\r\n    <td>\r\n      {{user.score}}\r\n    </td>\r\n  </tr>\r\n  </tbody>\r\n</table>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}