{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/about/about.component.ts","./src/app/about/about.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/first-and-last-messages-editor/first-and-last-messages-editor.component.ts","./src/app/first-and-last-messages-editor/first-and-last-messages-editor.component.html","./src/app/mainpage/mainpage.component.ts","./src/app/mainpage/mainpage.component.html","./src/app/message-form/message-form.component.ts","./src/app/message-form/message-form.component.html","./src/app/modal-add-question/modal-add-question.component.ts","./src/app/modal-add-question/modal-add-question.component.html","./src/app/model/option/option.ts","./src/app/model/score-range-result.ts","./src/app/navigation/navigation.component.ts","./src/app/navigation/navigation.component.html","./src/app/not-found/not-found.component.ts","./src/app/not-found/not-found.component.html","./src/app/question/question.component.ts","./src/app/question/question.component.html","./src/app/questions/questions.component.ts","./src/app/questions/questions.component.html","./src/app/score-range-message/score-range-message.component.ts","./src/app/score-range-message/score-range-message.component.html","./src/app/service/bot.service.ts","./src/app/service/image-file.service.ts","./src/app/service/main.service.ts","./src/app/service/question-service.service.ts","./src/app/service/score-range-result.service.ts","./src/app/service/user-service.service.ts","./src/app/users/users.component.ts","./src/app/users/users.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col\">\n      Здесь будут размещены иструкции, как пользоватсья ботом\n    </div>\n    <div class=\"col\">\n      2\n    </div>\n    <div class=\"col\">\n      3\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  title = 'nc bot';\n}\n","<div class=\"container\">\r\n  <app-navigation></app-navigation>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\n\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {AppComponent} from './app.component';\r\nimport {NavigationComponent} from './navigation/navigation.component';\r\nimport {RouterModule, Routes} from \"@angular/router\";\r\nimport {QuestionsComponent} from './questions/questions.component';\r\nimport {UsersComponent} from './users/users.component';\r\nimport {NotFoundComponent} from './not-found/not-found.component';\r\nimport {MainpageComponent} from './mainpage/mainpage.component';\r\nimport {FormsModule} from \"@angular/forms\";\r\nimport {HttpClientModule} from \"@angular/common/http\";\r\nimport { QuestionComponent } from './question/question.component';\r\nimport { ModalAddQuestionComponent } from './modal-add-question/modal-add-question.component';\r\nimport { MessageFormComponent } from './message-form/message-form.component';\r\nimport { AboutComponent } from './about/about.component';\r\nimport { FirstAndLastMessagesEditorComponent } from './first-and-last-messages-editor/first-and-last-messages-editor.component';\r\nimport { ScoreRangeMessageComponent } from './score-range-message/score-range-message.component';\r\n\r\nconst appRoutes: Routes = [\r\n  {\r\n    path: 'questions',\r\n    component: QuestionsComponent\r\n  },\r\n  {\r\n    path: 'users',\r\n    component: UsersComponent\r\n  },\r\n  {\r\n    path: '',\r\n    component: MainpageComponent,\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'questions/add',\r\n    component: QuestionComponent\r\n  },\r\n  {\r\n    path: 'global/message',\r\n    component: MessageFormComponent\r\n  },\r\n  {\r\n    path: 'range/message',\r\n    component: ScoreRangeMessageComponent\r\n  },\r\n  {\r\n    path: '**',\r\n    component: NotFoundComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavigationComponent,\r\n    QuestionsComponent,\r\n    UsersComponent,\r\n    NotFoundComponent,\r\n    MainpageComponent,\r\n    QuestionComponent,\r\n    ModalAddQuestionComponent,\r\n    MessageFormComponent,\r\n    AboutComponent,\r\n    FirstAndLastMessagesEditorComponent,\r\n    ScoreRangeMessageComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    RouterModule.forRoot(appRoutes)\r\n  ],\r\n  exports: [RouterModule],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-first-and-last-messages-editor',\n  templateUrl: './first-and-last-messages-editor.component.html',\n  styleUrls: ['./first-and-last-messages-editor.component.css']\n})\nexport class FirstAndLastMessagesEditorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>first-and-last-messages-editor works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport {BotService} from \"../service/bot.service\";\nimport {Bot} from \"../model/bot/bot\";\n\n@Component({\n  selector: 'app-mainpage',\n  templateUrl: './mainpage.component.html',\n  styleUrls: ['./mainpage.component.css']\n})\nexport class MainpageComponent implements OnInit {\n  bot:Bot = {\n    active:true\n  };\n  constructor(private botService:BotService) { }\n\n  ngOnInit(): void {\n    this.botService.isBotActive().subscribe((result:Bot) =>{\n      this.bot = result;\n    })\n  }\n\n  onClickTurnBtn(){\n    this.botService.setBotTurn(this.bot).subscribe((result:Bot) =>{\n      this.bot = result;\n      location.reload();\n    });\n  }\n\n  checkBotActivity():string{\n    if (this.bot.active == true) {\n      return \"on\";\n    }\n    return \"off\";\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col\">\n      <img src=\"./src/qr_link_to_telegram_bot.png\"/>\n      find me: @nctelegrambot\n    </div>\n    <div class=\"col\">\n      welcome to nc telegram bot configurer\n    </div>\n    <div class=\"col\">\n      for configuration, please sign in or sign up as nc edu center user\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col container-fluid\" style=\"text-align: center\">\n      <button class=\"btn btn-primary\" (click)=\"onClickTurnBtn()\">{{checkBotActivity()}}</button>\n    </div>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\r\nimport {MessageToUsers} from \"../model/message-to-users\";\r\nimport {MainService} from \"../service/main.service\";\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-message-form',\r\n  templateUrl: './message-form.component.html',\r\n  styleUrls: ['./message-form.component.css']\r\n})\r\nexport class MessageFormComponent implements OnInit {\r\n  messageToUsers: MessageToUsers = {\r\n    text: '',\r\n    maxScore:0,\r\n    minScore:0\r\n  };\r\n\r\n  constructor(private mainService: MainService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  sendMessageToUsers() {\r\n    this.mainService.sendMessageToUsers(this.messageToUsers).subscribe(result => {\r\n        window.location.href = \"/\";\r\n      },\r\n      error => {\r\n        alert(\"Error during sending the message\");\r\n      })\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col\">\n        <label for=\"message__form\">input message for users</label>\n        <textarea id=\"message__form\" [(ngModel)]=\"messageToUsers.text\"></textarea>\n    </div>\n    <div class=\"col\">\n      score range for message\n      from: <input type=\"text\" [(ngModel)]=\"messageToUsers.minScore\"/>\n      to: <input type=\"text\" [(ngModel)]=\"messageToUsers.maxScore\"/>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col\">\n      <button class=\"btn-primary\" (click)=\"sendMessageToUsers()\">send message</button>\n    </div>\n  </div>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {NgbModal, NgbActiveModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {Question} from \"../model/question/question\";\nimport {Option} from \"../model/option/option\";\nimport {QuestionServiceService} from \"../service/question-service.service\";\nimport {ImageFile} from \"../model/image-file\";\n\n\n@Component({\n  selector: 'app-modal-add-question',\n  templateUrl: './modal-add-question.component.html',\n  styleUrls: ['./modal-add-question.component.css']\n})\nexport class ModalAddQuestionComponent implements OnInit {\n  @Input() editQuestion:Question;\n  modalForm: NgbActiveModal;\n  indexOfTrueOption:number;\n  isQuestionChanged:boolean;\n  question: Question = {\n    id:0,\n    content: '',\n    options: [],\n    answer: '',\n    weight:0\n  };\n\n\n  constructor(private modalService: NgbModal, private modal: NgbActiveModal, private questionService: QuestionServiceService) {\n    this.modalForm = modal;\n  }\n\n\n  ngOnInit(): void {\n    if (this.editQuestion != null) {\n      this.isQuestionChanged = true;\n      this.question = this.editQuestion;\n    }\n    else  {\n      this.isQuestionChanged = false;\n    }\n  }\n\n  saveQuestion() {\n    let i:number = 0;\n    for (let option of this.question.options){\n      if (i == this.indexOfTrueOption) {\n        this.question.answer = option.content;\n      }\n      i++;\n    }\n    this.questionService.sendQuestion(this.question, this.isQuestionChanged).subscribe(result => {\n        location.reload();\n      },\n      error => {\n        alert(\"Error\")\n      });\n    this.modalForm.close(\"Efrfrf\");\n  }\n\n  addOptionToQuestion() {\n    let opt: Option = new Option();\n    this.question.options.push(opt);\n  }\n\n  removeOptionToQuestion() {\n\n  }\n}\n","<div class=\"modal-lg\">\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\">add new question</h4>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modalForm.dismiss('Cross click')\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col\">\n          <label for=\"question__input\">\n            question\n          </label>\n        </div>\n        <div class=\"col\">\n      <textarea [(ngModel)]=\"question.content\" id=\"question__input\">\n      </textarea>\n        </div>\n        <div class=\"col\">\n          <label for=\"weight__selector\">weight</label>\n          <select [(ngModel)]=\"question.weight\" id=\"weight__selector\">\n            <option>1</option>\n            <option>2</option>\n            <option>3</option>\n            <option>4</option>\n            <option>5</option>\n          </select>\n        </div>\n      </div>\n      <div class=\"row\" *ngFor=\"let option of this.question.options; let i = index\">\n        <div class=\"col\">\n          <label>\n            option\n          </label>\n        </div>\n        <div class=\"col\">\n          <input [(ngModel)]=\"option.content\" type=\"text\"/>\n        </div>\n\n        <div class=\"col\">\n          <label>\n            is true\n          </label>\n          <input type=\"radio\" name=\"is_true\" value=\"{{i}}\" [(ngModel)]=\"indexOfTrueOption\"/>\n        </div>\n        <div class=\"col\">\n          <label>\n            reaction\n          </label>\n          <input type=\"text\" name=\"reaction\" [(ngModel)]=\"option.reaction\"/>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"submit\" style=\"margin: 0 20px auto\" class=\"btn btn-primary\" (click)=\"addOptionToQuestion()\">add\n      option\n    </button>\n    <button type=\"submit\" class=\"btn btn-primary\" style=\"margin: 0 20px auto\" (click)=\"saveQuestion()\" *ngIf=\"isQuestionChanged\">\n      edit question\n    </button>\n    <button type=\"submit\" class=\"btn btn-primary\" style=\"margin: 0 20px auto\" (click)=\"saveQuestion()\" *ngIf=\"!isQuestionChanged\">\n      save question\n    </button>\n  </div>\n</div>\n","export class Option {\n  id:number;\n  content:string;\n  reaction:string;\n}\n","export class ScoreRangeResult {\n  id:number;\n  max:number;\n  text:string;\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent implements OnInit {\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <a class=\"navbar-brand\" href=\"#\">NC TELEGRAM BOT</a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n    <div class=\"navbar-nav\">\n      <a class=\"nav-item nav-link active\" href=\"/\">home<span class=\"sr-only\">(current)</span></a>\n      <a class=\"nav-item nav-link\" href=\"/questions\">qustions</a>\n      <a class=\"nav-item nav-link\" href=\"/users\">users</a>\n      <a class=\"nav-item nav-link\" href=\"/global/message\">send message</a>\n      <a class=\"nav-item nav-link\" href=\"/range/message\">score ranged messages</a>\n      <a class=\"nav-item nav-link disabled\" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\">sign in/up</a>\n    </div>\n  </div>\n</nav>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>not-found works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n  selector: 'app-question',\n  templateUrl: './question.component.html',\n  styleUrls: ['./question.component.css']\n})\nexport class QuestionComponent implements OnInit {\n  model:AddingQuestionWithOptionsForm = {\n    question:'',\n    options:[]\n  };\n  constructor(private httpClient: HttpClient) { }\n\n  ngOnInit(): void {\n  }\n\n  sendQuestionWithOptions(): void{\n    let url=\"http://localhost:8080/questions/add\";\n    this.httpClient.post(url, this.model).subscribe(res =>\n      {\n        location.reload();\n      },\n      error => {\n        alert(\"Error\");\n      }\n    )\n  }\n\n}\n\nexport interface AddingQuestionWithOptionsForm {\n  question:string;\n  options:Option[];\n}\n\nexport interface Option {\n  content:string;\n}\n","<form (submit)=\"sendQuestionWithOptions()\">\n  <div class=\"form-group row\">\n    <label for=\"question__content\" class=\"col-sm-2 col-form-label\">question</label>\n    <div class=\"col-sm-10\">\n      <input type=\"text\" class=\"form-control\" id=\"question__content\" [(ngModel)] = model.question placeholder=\"question\">\n    </div>\n  </div>\n  <div class=\"form-group row\">\n    <label for=\"option\" class=\"col-sm-2 col-form-label\">option</label>\n    <div class=\"col-sm-10\">\n      <input type=\"text\" class=\"form-control\" id=\"option\" placeholder=\"Password\">\n    </div>\n  </div>\n  <div class=\"form-group row\">\n    <div class=\"col-sm-10\">\n      <button type=\"submit\" class=\"btn btn-primary\">ok</button>\n    </div>\n  </div>\n</form>\n","import {Component, OnInit} from '@angular/core';\nimport {Question} from \"../model/question/question\";\nimport {QuestionServiceService} from \"../service/question-service.service\";\nimport {NgbModal} from '@ng-bootstrap/ng-bootstrap';\nimport {ModalAddQuestionComponent} from \"../modal-add-question/modal-add-question.component\";\nimport {ImageFileService} from \"../service/image-file.service\";\n\n@Component({\n  selector: 'app-questions',\n  templateUrl: './questions.component.html',\n  styleUrls: ['./questions.component.css']\n})\nexport class QuestionsComponent implements OnInit {\n  questions: Question[];\n  public selectedFile;\n\n  constructor(private imageFileService: ImageFileService, private questionService: QuestionServiceService, private modalService: NgbModal) {\n  }\n\n  ngOnInit(): void {\n    this.questionService.getAllQuestions().subscribe((result: Question[]) => {\n        this.questions = result;\n      }\n    );\n  }\n\n  openCreationNewQuestionForm() {\n    this.modalService.open(ModalAddQuestionComponent);\n  }\n\n  deleteQuestion(id) {\n    this.questionService.deleteQuestion(id).subscribe(result => {\n      location.reload();\n    }, error => {\n      alert(\"Error\");\n    });\n  }\n\n  editQuestion(q: Question) {\n    let modalForm = this.modalService.open(ModalAddQuestionComponent);\n    modalForm.componentInstance.editQuestion = q;\n  }\n\n  processFile(questionId: number) {\n    this.imageFileService.uploadImage(questionId, this.selectedFile).subscribe(result => {\n        alert(\"Success\");\n      },\n      error => {\n        alert(\"Something go wrong!..\")\n      });\n  }\n\n  onFileChanged(event) {\n    this.selectedFile = event.target.files[0];\n  }\n}\n","<div class=\"container-fluid\">\n  <button type=\"button\" (click)=\"openCreationNewQuestionForm()\" class=\"btn btn-primary btn-lg btn-block\"\n          style=\"margin: 20px 0 20px 0\">add new question\n  </button>\n  <table class=\"table table-bordered\">\n    <thead>\n    <tr>\n      <th>\n        №\n      </th>\n      <th>\n        attachment\n      </th>\n      <th>\n        content\n      </th>\n      <th>\n        options\n      </th>\n      <th>\n        answer\n      </th>\n      <th>\n        weight\n      </th>\n      <th>\n        actions\n      </th>\n    </tr>\n    </thead>\n    <tbody *ngFor=\"let question of questions; let i = index\">\n    <tr id=\"'tr__' + {{i}}\">\n      <td>\n        {{i + 1}}\n      </td>\n      <td>\n        <div *ngIf=\"question.attachment != null\">\n          {{question.attachment}}\n        </div>\n        <div *ngIf=\"question.attachment == null\">\n          <input (change)=\"onFileChanged($event)\" type=\"file\"/>\n          <button (click)=\"processFile(question.id)\">add</button>\n        </div>\n      </td>\n      <td>\n        {{question.content}}\n      </td>\n      <td>\n        <ul *ngFor=\"let option of question.options\">\n          <li>\n            {{option.content}}\n          </li>\n        </ul>\n      </td>\n      <td>\n        {{question.answer}}\n      </td>\n      <td>\n        {{question.weight}}\n      </td>\n      <td>\n        <div class=\"container\">\n          <div class=\"row\" style=\"text-align: center\">\n            <div class=\"col\">\n              <button class=\"btn btn-primary\" (click)=\"editQuestion(question)\">edit</button>\n            </div>\n            <div class=\"col\">\n              <button class=\"btn btn-danger\" (click)=\"deleteQuestion(question.id)\">delete</button>\n            </div>\n          </div>\n        </div>\n      </td>\n    </tr>\n    </tbody>\n  </table>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {ScoreRangeResult} from \"../model/score-range-result\";\nimport {ScoreRangeResultService} from \"../service/score-range-result.service\";\nimport {ImageFileService} from \"../service/image-file.service\";\n\n@Component({\n  selector: 'app-score-range-message',\n  templateUrl: './score-range-message.component.html',\n  styleUrls: ['./score-range-message.component.css']\n})\nexport class ScoreRangeMessageComponent implements OnInit {\n  scoreRanges:ScoreRangeResult[];\n  imageFile:File;\n  constructor(private scoreRangeResultService: ScoreRangeResultService) { }\n\n  ngOnInit(): void {\n    this.scoreRanges = [];\n    this.scoreRangeResultService.getAllScoreRangeResults().subscribe((result:ScoreRangeResult) => {\n      this.scoreRanges.push(result);\n    });\n  }\n\n  addNewScoreRange() {\n    let scoreRangeResult: ScoreRangeResult = new ScoreRangeResult();\n    this.scoreRanges.push(scoreRangeResult);\n  }\n\n  scoreRangeResultSend(scoreRangeResult: ScoreRangeResult) {\n    this.scoreRangeResultService.uploadImageForScoreRange(scoreRangeResult).subscribe(result =>{\n      alert(\"SUCCESS\");\n    },\n      error => {\n      alert(\"ERROR\");\n      })\n  }\n\n  changeImageFile(event) {\n    this.imageFile = event.target.files[0];\n  }\n}\n","<div class=\"container-fluid\">\n  <button class=\"btn-primary\" (click)=\"addNewScoreRange()\">new score range</button>\n  <div class=\"row\" *ngFor=\"let scoreRange of this.scoreRanges; let i = index\">\n    <div class=\"col\">\n      <div class=\"form-group\">\n        <label>max range</label>\n        <input [(ngModel)]=\"scoreRange.max\" type=\"number\"/>\n        <input [(ngModel)]=\"scoreRange.text\" type=\"text\"/>\n        <input (change)=\"changeImageFile($event)\" type=\"file\"/>\n      </div>\n    </div>\n    <button (click)=\"scoreRangeResultSend(scoreRange)\" class=\"btn-dark\">ok</button>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {Bot} from \"../model/bot/bot\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BotService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  isBotActive():Observable<any> {\n    return this.httpClient.get(\"/bot/get/turn\");\n  }\n\n  setBotTurn(bot:Bot):any {\n    let url:string = \"/bot/turn\";\n    return this.httpClient.post(url, bot);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {Observable} from \"rxjs\";\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageFileService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  uploadImage(questionId: number, file: File):Observable<any> {\n    alert(\"UPLOAD IMAGE!\");\n    const formData = new FormData();\n    formData.append(\"image\", file);\n    let url = \"questions/attachment/upload/\" + questionId;\n    return this.httpClient.post(url, formData);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {MessageToUsers} from \"../model/message-to-users\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MainService {\n\n  constructor(private httpClient:HttpClient) { }\n\n  sendMessageToUsers(messageToUsers:MessageToUsers):Observable<any> {\n    let url:string = \"send/global/message\";\n    return this.httpClient.post(url, messageToUsers);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Question} from \"../model/question/question\";\nimport {Observable} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuestionServiceService {\n  host = \"/questions/\";\n  question: Question;\n\n  constructor(private httpClient: HttpClient) {\n  }\n\n  getAllQuestions(): Observable<any> {\n    let url = this.host + \"all/text\";\n    return this.httpClient.get(url);\n  }\n\n  sendQuestion(question: Question, isQuestionChanged: boolean): any {\n    let url:string;\n    if (isQuestionChanged) {\n      url = this.host + \"edit\";\n    } else {\n      url = this.host + \"add\";\n    }\n    return this.httpClient.post(url, question);\n  }\n\n  deleteQuestion(id): Observable<any> {\n    let url = this.host + \"remove?id=\" + id;\n    return this.httpClient.get(url);\n  }\n\n  editQuestion(id): Observable<any> {\n    let url = this.host + \"edit?id=\" + id;\n    return this.httpClient.get(url);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {ScoreRangeResult} from \"../model/score-range-result\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ScoreRangeResultService {\n\n  constructor(private httpClient:HttpClient) { }\n\n  getAllScoreRangeResults() {\n    return this.httpClient.get(\"/score/ranges\");\n  }\n\n  uploadImageForScoreRange(scoreRangeResult: ScoreRangeResult) {\n    let url = \"score/ranges/\";\n    return this.httpClient.post(url, scoreRangeResult);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {Observable} from \"rxjs\";\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserServiceService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  getAllUsers(): Observable<any> {\n    return this.httpClient.get(\"all/users\");\n  }\n\n  givePresentToUser(id): Observable<any> {\n    let url = \"user/\" + id + \"/present\";\n    return this.httpClient.get(url);\n  }\n\n  isPresenGivenToUser(id): any {\n    let url = \"user/\" + id + \"/present/check\";\n    return this.httpClient.get(url);\n  }\n}\n","import {Component, OnInit} from '@angular/core';\r\nimport {UserServiceService} from \"../service/user-service.service\";\r\nimport {User} from \"../model/user/user\";\r\n\r\n@Component({\r\n  selector: 'app-users',\r\n  templateUrl: './users.component.html',\r\n  styleUrls: ['./users.component.css']\r\n})\r\nexport class UsersComponent implements OnInit {\r\n  users: User[];\r\n\r\n  constructor(private userService: UserServiceService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.userService.getAllUsers().subscribe((result: User[]) => {\r\n        this.users = result;\r\n        this.checkIsUserActiveNow(this.users);\r\n      }\r\n    )\r\n  }\r\n\r\n  checkIsUserActiveNow(users): void {\r\n    users.forEach(function (value: User) {\r\n      if (value.activeNow) {\r\n        value.color = \"yellow\";\r\n      }\r\n      if (value.presentGiven) {\r\n        value.color = \"red\";\r\n      }\r\n    });\r\n  }\r\n\r\n  givePresentToUser(id): void {\r\n    this.userService.givePresentToUser(id).subscribe(result => {\r\n      location.reload();\r\n    })\r\n  }\r\n\r\n}\r\n","<table class=\"table table-bordered\">\r\n  <thead>\r\n  <tr>\r\n    <th>\r\n      №\r\n    </th>\r\n    <th>\r\n      telegram id\r\n    </th>\r\n    <th>\r\n      first name\r\n    </th>\r\n    <th>\r\n      last name\r\n    </th>\r\n    <th>\r\n      user name\r\n    </th>\r\n    <th>\r\n      score\r\n    </th>\r\n    <th>\r\n      is present given\r\n    </th>\r\n  </tr>\r\n  </thead>\r\n  <tbody *ngFor=\"let user of users; let i = index\">\r\n  <tr [ngStyle]=\"{'background-color':user.color}\">\r\n    <td>\r\n      {{i}}\r\n    </td>\r\n    <td>\r\n      {{user.telegramId}}\r\n    </td>\r\n    <td>\r\n      {{user.firstName}}\r\n    </td>\r\n    <td>\r\n      {{user.lastName}}\r\n    </td>\r\n    <td>\r\n      {{user.username}}\r\n    </td>\r\n    <td>\r\n      {{user.score}}\r\n    </td>\r\n    <td>\r\n      <button class=\"badge-info\" (click)=\"givePresentToUser(user.id)\" [disabled]=\"user.presentGiven\">give present</button>\r\n    </td>\r\n  </tr>\r\n  </tbody>\r\n</table>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}